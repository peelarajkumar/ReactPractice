My first React Practice App

Steps I have done :

1. React and React DOM using CDN's
2. React.createElement and React.createRoot
3. React element is an Object , render method is used to convert React Object into HTML.

React is Fast because Parcel ,  NPM helps React to be Faster

NPM : It manages all the Packages and their dependencies we use !
NPM is a data base for all our Packages.

1.NPM init
2.We need a bundler : Bundler bundles our code and makes production ready.

Parcel , webpack , wheat are some Bundlers and Parcel is one of the powerful bundler.

Parcel :

NPM install -D Parcel

Parcel usages:
npx parcel index.html (building our app in server) - dev build
npx parcel build index.html - Prod Build (Production build code)

1. It hosts our app on local server
2. It creates a dev build for us
3. Hot Moduler Replacement - make some changes and save , app will automatically update.
4. File watching Algorithm
5. Parcel caching - Builds faster.
6. Diaognistics Error Handling
6. Compressing the code 
7. Image optimisation
8. Differential building
9. Tree shaking


// JSX - HTML like sytnax to make react more easier

const head = React.createElement("h1",{},"I am Childern")
const jsxhead = (<h1 id="jsxhead">I Am JSX Childer</h1>)

JSX => React Element => HTML
JSX -(Parcel-Babel)-React Element - Render - HTML 


Props :

Arguments to function - Props to component

key , while looping it's always best to have any uniqueparam as a key - > helps react to know which is the new/changed component . instead of re-rendering all the components


we can wrap all of our components in one folder and we can use the component 
by exporting them.

two types of exports : export default Component;  export const element . component; (Multiple) ;


Hooks - Super power Variable (State Variable) ;

State variables are react variables , where it keeps the data and UI Synchronous.
Change in data will change the component UI.

useState() - is a hook ( Its a js function which returns array of [variable,SetVariable])

Hooks Rule : can be used only inside the functional Components.

setVariable(newvariable) ---- React Fiber | Diff algorith - i.e takes the old virtual dom , compares it with old and  new virtual dom and then renders the new UI .


useEffect() - is a hook , this is executed once the component is completely rendered.

useEffect(()=>{},[]) - it takes two params.

